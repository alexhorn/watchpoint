"""
This provides a way to check if a Telnet server allows login
using a list of standard credentials.
"""

from enum import Enum
from telnetlib import Telnet
from random import sample

# TODO: find better list
CRED_LIST = [
    ("", ""),
    ("root", "root"),
    ("admin", "admin")
]
ENCODING = "utf-8"
DEFAULT_PORT = 23
TIMEOUT = 5

EXPECT_LIST = [
    rb"\$|#",
    rb"incorrect",
    rb"(?i)login:",
    rb"(?i)password:"
]
IDX_UNEXPECTED_DATA = -1
IDX_EXPECT_SHELL = 0
IDX_EXPECT_DENIED = 1
IDX_EXPECT_LOGIN = 2
IDX_EXPECT_PASSWORD = 3

class TelnetError(Exception):
    pass

class TelnetCredentialChecker:
    def __check_username_password(self, ip_addr, port, username, password):
        with Telnet(ip_addr, port, TIMEOUT) as telnet:
            username_sent = False
            password_sent = False

            while True:
                (idx, _, data) = telnet.expect(EXPECT_LIST, TIMEOUT)

                if idx == IDX_EXPECT_LOGIN and not username_sent:
                    username_sent = True
                    telnet.write(username.encode(ENCODING) + b"\n")
                elif idx == IDX_EXPECT_PASSWORD and not password_sent:
                    password_sent = True
                    telnet.write(password.encode(ENCODING) + b"\n")
                elif idx == IDX_EXPECT_SHELL:
                    return True
                elif idx == IDX_EXPECT_DENIED and (username_sent or password_sent):
                    return False
                elif idx == IDX_UNEXPECTED_DATA:
                    raise TelnetError("Received unexpected data: {}".format(data))
    
    def check(self, ip_addr, port=DEFAULT_PORT):
        shuffled_cred_list = sample(CRED_LIST, k=len(CRED_LIST))

        for (username, password) in shuffled_cred_list:
            try:
                if self.__check_username_password(ip_addr, port, username, password):
                    print("Login with {}:{} succeeded".format(username, password))
                    return (username, password)
            except TelnetError as e:
                print(e)
                return False

        return False
